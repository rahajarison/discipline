services:
  backend:
    build: 
      context: back
      dockerfile: Dockerfile-local
    ports:
      - "80:8080"  # Mapper le port du conteneur (8080) à votre port local (8080)
    volumes:
      - ./back:/back  # Monter le répertoire local dans le conteneur pour que les modifications se propagent
    environment:
      - DB_HOST=postgres
      - DB_USER=discipline
      - DB_PASSWORD=discipline
      - DB_NAME=discipline
      - DB_PORT=5432
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    depends_on:
      - postgres

  # frontend:
  #   build: front
  #   ports:
  #     - "5173:80"
  #   volumes:
  #     - .:/app
  #   environment:
  #     # - NODE_ENV=development
  #     - NODE_ENV=production

  # # Service pour l'application Go
  # backend_build:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"  # Mapper le port 8080 du container au port 8080 local
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_USER=discipline
  #     - DB_PASSWORD=discipline
  #     - DB_NAME=discipline
  #   depends_on:
  #     - postgres  # Assure que le backend démarre après le service postgres


  # Service pour PostgreSQL
  postgres:
    image: postgres:latest  # Use official postgres image
    environment:
      POSTGRES_USER: discipline
      POSTGRES_PASSWORD: discipline
      POSTGRES_DB: discipline
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

 # Service pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80" # If you want to use another port, feel free to change it
    depends_on:
      - postgres

volumes:
  postgres_data:
